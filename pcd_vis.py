import sys

import numpy as np
import open3d as o3d


def draw_pc(pc_xyzrgb):
    """
    Plot pointcloud with color
    Parameter:
        pc_xyzrgb: [[x, y, z, r, g, b],...]
    """
    pc = o3d.geometry.PointCloud()
    pc.points = o3d.utility.Vector3dVector(pc_xyzrgb[:, 0:3])
    if pc_xyzrgb.shape[1] == 3:
        o3d.visualization.draw_geometries([pc])
        return 0
    if np.max(pc_xyzrgb[:, 3:6]) > 20:  ## 0-255
        pc.colors = o3d.utility.Vector3dVector(pc_xyzrgb[:, 3:6] / 255.)
    else:
        pc.colors = o3d.utility.Vector3dVector(pc_xyzrgb[:, 3:6])
    o3d.visualization.draw_geometries([pc])
    return 0

def read_pcd(path):
    """
    Read pcd file generated by ./func.py/save_pc
    Parameter:
        path: path of pcd file
    Return:
        xyzrgb: numpy array of colored pointcloud [[x, y, z. r, g, b], ...]
    """
    xyzrgb = []
    with open(path, 'r') as f:
        content = f.readlines()
        for i in content[10:]:
            i_content = i.split(" ")
            x, y, z = float(i_content[0]), float(i_content[1]), float(i_content[2])
            r, g, b = float(i_content[3]), float(i_content[4]), float(i_content[5][:-1])

            xyzrgb.append([x,y,z,r,g,b])

    return np.array(xyzrgb)


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python3 pcd_vis.py <pcd_file_path>")
        sys.exit(1)
    PATH = sys.argv[1]

    # Read
    pc = read_pcd(PATH)
    # Draw
    draw_pc(pc)
